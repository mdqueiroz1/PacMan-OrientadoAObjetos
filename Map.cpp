#include <stdio.h>
#include <iostream>

#include "allegro5/allegro.h"
#include "allegro5/allegro_image.h"
#include "allegro5/allegro_audio.h"
#include "allegro5/allegro_acodec.h"

#include "Moeda.cpp"
#include "Parede.cpp"

using namespace std;

const int TAM_MAPA_L = 653;
const int TAM_MAPA_A = 720;

class Map : Moeda, Parede{
    private:
  
    public:
        Map();
        ~Map();
        void montarMapa();
};

Map::Map(){}

Map::~Map(){
    printf("Mapa destruido com sucesso!\n");
}

void Map::montarMapa(){

    int mapa[32][28] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},//
                        {1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,2,1},//
                        {1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,2,1},//
                        {1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,2,1},//
                        {1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,2,1},//
                        {1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1},//
                        {1,2,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,2,1},//
                        {1,2,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,2,1},//
                        {1,2,2,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,2,2,1},//
                        {1,1,1,1,1,1,2,1,1,1,1,1,3,1,1,3,1,1,1,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,1,1,1,3,1,1,3,1,1,1,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,3,3,3,3,1,1,3,3,3,3,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,3,3,3,3,1,1,3,3,3,3,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,3,3,3,3,3,3,3,3,3,3,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,3,1,1,1,3,3,1,1,1,3,1,1,2,1,1,1,1,1,1},//
                        {3,3,3,3,3,3,2,1,1,3,1,3,3,3,3,3,3,1,3,1,1,2,3,3,3,3,3,3},//
                        {1,1,1,1,1,1,2,1,1,3,1,3,3,3,3,3,3,1,3,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,3,1,1,1,1,1,1,1,1,3,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,3,3,3,3,3,3,3,3,3,3,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,3,1,1,1,1,1,1,1,1,3,1,1,2,1,1,1,1,1,1},//
                        {1,1,1,1,1,1,2,1,1,3,1,1,1,1,1,1,1,1,3,1,1,2,1,1,1,1,1,1},//
                        {1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,2,1},//
                        {1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,2,1},//
                        {1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,2,1},//
                        {1,2,2,2,1,1,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,2,1,1,2,2,2,1},//
                        {1,1,1,2,1,1,2,1,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,2,1,1,1},//
                        {1,1,1,2,1,1,2,1,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,2,1,1,1},//
                        {1,2,2,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,2,2,1},//
                        {1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1},//
                        {1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1},//
                        {1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1},//
                        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};


    int posicaoImagemA = 0,
        posicaoImagemL = ((1280-TAM_MAPA_L)/2);   

    for (int i = 0; i < 32; i++){
        for (int j = 0; j < 28; j++){
            switch (mapa[i][j]){
                case 1:{
                    al_draw_bitmap_region(parede, 0, 0, getParedeBordaX(), getParedeBordaY(), posicaoImagemL+(j*22),posicaoImagemA+(i*22),0);
                    break;
                }
                case 2:{
                    al_draw_bitmap_region(moeda, 0, 0, getMoedaBordaX(), getMoedaBordaY(), posicaoImagemL+(j*22),posicaoImagemA+(i*22), 0);
                    break;
                }
                case 3:{
                    al_draw_bitmap_region(vazio, 0, 0, getParedeBordaX(), getParedeBordaY(), posicaoImagemL+(j*22),posicaoImagemA+(i*22),0);
                    break;
                }
            }
        }  
    }
    al_flip_display(); 
    
}